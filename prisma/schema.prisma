generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_DEV_URL")
}

enum TransactionType {
  expense
  deposit
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  isActive     Boolean       @default(false) @map("is_active")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  transactions Transaction[]
  allocations  Allocation[]

  @@map("users")
}

model Budget {
  id          Int         @id @default(autoincrement())
  name        String
  startDate   DateTime    @map("start_date")
  endDate     DateTime    @map("end_date")
  allocations Allocation[]
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  @@map("budgets")
}

model Allocation {
  id           Int           @id @default(autoincrement())
  name         String
  amount       Float
  budget       Budget        @relation(fields: [budgetId], references: [id])
  budgetId     Int           @map("budget_id")
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           @map("user_id")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("allocations")
}

model Transaction {
  id           Int             @id @default(autoincrement())
  amount       Float
  description  String
  type         TransactionType @default(expense)
  date         DateTime        @default(now())
  allocation   Allocation?     @relation(fields: [allocationId], references: [id])
  allocationId Int?            @map("allocation_id")
  user         User            @relation(fields: [userId], references: [id])
  userId       Int             @map("user_id")
  wallet       Wallet          @relation(fields: [walletId], references: [id])
  walletId     Int             @map("wallet_id")
  createdAt    DateTime        @default(now()) @map("created_at")
  updatedAt    DateTime        @updatedAt @map("updated_at")

  @@map("transactions")
}

model Wallet {
  id           Int           @id @default(autoincrement())
  name         String
  balance      Float
  transactions Transaction[]
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("wallets")
}
