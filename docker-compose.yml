services:
  # Service for your React application
  react-app:
    build: .
    container_name: familymoney
    ports:
      - "3000:3000"
    volumes:
      # 1. Mount source code for development (hot-reloading)
      #    Mounts the current directory (.) on the host to /usr/src/app in the container
      #    Adjust '/usr/src/app' if your Dockerfile uses a different WORKDIR
      - .:/usr/src/app
      # 2. Prevent host node_modules from overwriting container node_modules
      #    Creates an anonymous volume inside the container for node_modules
      - /usr/src/app/node_modules
      # 3. Mount the named volume 'sqlite_data' for the database file
      #    Your React app needs to be configured to look for the SQLite file
      #    inside this '/app/data' directory within the container.
      #    Example: '/app/data/my_database.db'
      - sqlite_data:/app/data
    environment:
      # Pass environment variables to your application if needed
      # Example: Tell your app where the database file is located INSIDE the container
      - DATABASE_PATH=/app/data/database.db
      # Example for Node/Express backend often used with React:
      # - DATABASE_URL=sqlite:///app/data/my_database.db
      # Add any other environment variables your app requires
      - NODE_ENV=development # Often useful
      # If using Vite, you might need this for the dev server to be accessible
      # - HOST=0.0.0.0
    # command: npm run dev # Optional: Override the default command from your Dockerfile

volumes:
  # Declare the named volume for storing the SQLite database file persistently
  sqlite_data: {}
